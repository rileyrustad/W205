-- set hive.cli.print.header=true;


select * from agg_state limit 5;

DROP TABLE agg_state;
CREATE TABLE agg_state
ROW FORMAT DELIMITED 
AS SELECT 
STATE,
SUM(NUMBER_OF_HOSPITALS_WORSE) AS SUM_NUMBER_OF_HOSPITALS_WORSE,
SUM(NUMBER_OF_HOSPITALS_SAME) AS SUM_NUMBER_OF_HOSPITALS_SAME,
SUM(NUMBER_OF_HOSPITALS_BETTER) AS SUM_NUMBER_OF_HOSPITALS_BETTER
FROM cleaned_readmissions_state
GROUP BY STATE;


DROP TABLE best_state;
CREATE TABLE best_state
ROW FORMAT DELIMITED 
AS SELECT
STATE, SUM(-1*SUM_NUMBER_OF_HOSPITALS_WORSE + SUM_NUMBER_OF_HOSPITALS_BETTER)/
SUM(
(CASE WHEN SUM_NUMBER_OF_HOSPITALS_WORSE is null THEN 0 ELSE SUM_NUMBER_OF_HOSPITALS_WORSE END)+
(CASE WHEN SUM_NUMBER_OF_HOSPITALS_SAME is null THEN 0 ELSE SUM_NUMBER_OF_HOSPITALS_SAME END)+
(CASE WHEN SUM_NUMBER_OF_HOSPITALS_BETTER is null THEN 0 ELSE SUM_NUMBER_OF_HOSPITALS_BETTER END))
AS SCORE
FROM agg_state
GROUP BY STATE
SORT BY SCORE DESC;

select * from best_state limit 10;


-- DROP TABLE best_state;
-- CREATE TABLE best_state
-- ROW FORMAT DELIMITED 
-- AS SELECT STATE,
-- 1 AS ones,
-- min(CASE WHEN MEASURE_ID = 'MORT_30_AMI' THEN SCORE END) AS MORT_30_AMI,
-- min(CASE WHEN MEASURE_ID = 'MORT_30_CABG' THEN SCORE END) AS MORT_30_CABG,
-- min(CASE WHEN MEASURE_ID = 'MORT_30_COPD' THEN SCORE END) AS MORT_30_COPD,
-- min(CASE WHEN MEASURE_ID = 'MORT_30_HF' THEN SCORE END) AS MORT_30_HF,
-- min(CASE WHEN MEASURE_ID = 'MORT_30_PN' THEN SCORE END) AS MORT_30_PN,
-- min(CASE WHEN MEASURE_ID = 'MORT_30_STK' THEN SCORE END) AS MORT_30_STK,
-- min(CASE WHEN MEASURE_ID = 'READM_30_AMI' THEN SCORE END) AS READM_30_AMI,
-- min(CASE WHEN MEASURE_ID = 'READM_30_CABG' THEN SCORE END) AS READM_30_CABG,
-- min(CASE WHEN MEASURE_ID = 'READM_30_COPD' THEN SCORE END) AS READM_30_COPD,
-- min(CASE WHEN MEASURE_ID = 'READM_30_HF' THEN SCORE END) AS READM_30_HF,
-- min(CASE WHEN MEASURE_ID = 'READM_30_HIP_KNEE' THEN SCORE END) AS READM_30_HIP_KNEE,
-- min(CASE WHEN MEASURE_ID = 'READM_30_HOSP_WIDE' THEN SCORE END) AS READM_30_HOSP_WIDE,
-- min(CASE WHEN MEASURE_ID = 'READM_30_PN' THEN SCORE END) AS READM_30_PN,
-- min(CASE WHEN MEASURE_ID = 'READM_30_STK' THEN SCORE END) AS READM_30_STK
-- FROM cleaned_readmissions_state
-- GROUP BY STATE;

-- -- select * from best_state limit 5;

-- DROP TABLE min_max_state;
-- CREATE TABLE min_max_state
-- ROW FORMAT DELIMITED
-- AS SELECT 
-- STATE,
-- 1 as ones, -- This allows me to do an equivilent of a cross join with unstack_readmissions table later
-- MAX(MORT_30_AMI) AS MaxMORT_30_AMI,
-- MIN(MORT_30_AMI) AS MinMORT_30_AMI,
-- MAX(MORT_30_AMI)-MIN(MORT_30_AMI) AS RangeMORT_30_AMI,
-- MAX(MORT_30_CABG) AS MaxMORT_30_CABG,
-- MIN(MORT_30_CABG) AS MinMORT_30_CABG,
-- MAX(MORT_30_CABG)-MIN(MORT_30_CABG) AS RangeMORT_30_CABG,
-- MAX(MORT_30_COPD) AS MaxMORT_30_COPD,
-- MIN(MORT_30_COPD) AS MinMORT_30_COPD,
-- MAX(MORT_30_COPD)-MIN(MORT_30_COPD) AS RangeMORT_30_COPD,
-- MAX(MORT_30_HF) AS MaxMORT_30_HF,
-- MIN(MORT_30_HF) AS MinMORT_30_HF,
-- MAX(MORT_30_HF)-MIN(MORT_30_HF) AS RangeMORT_30_HF,
-- MAX(MORT_30_PN) AS MaxMORT_30_PN,
-- MIN(MORT_30_PN) AS MinMORT_30_PN,
-- MAX(MORT_30_PN)-MIN(MORT_30_PN) AS RangeMORT_30_PN,
-- MAX(MORT_30_STK) AS MaxMORT_30_STK,
-- MIN(MORT_30_STK) AS MinMORT_30_STK,
-- MAX(MORT_30_STK)-MIN(MORT_30_STK) AS RangeMORT_30_STK,
-- MAX(READM_30_AMI) AS MaxREADM_30_AMI,
-- MIN(READM_30_AMI) AS MinREADM_30_AMI,
-- MAX(READM_30_AMI)-MIN(READM_30_AMI) AS RangeREADM_30_AMI,
-- MAX(READM_30_CABG) AS MaxREADM_30_CABG,
-- MIN(READM_30_CABG) AS MinREADM_30_CABG,
-- MAX(READM_30_CABG)-MIN(READM_30_CABG) AS RangeREADM_30_CABG,
-- MAX(READM_30_COPD) AS MaxREADM_30_COPD,
-- MIN(READM_30_COPD) AS MinREADM_30_COPD,
-- MAX(READM_30_COPD)-MIN(READM_30_COPD) AS RangeREADM_30_COPD,
-- MAX(READM_30_HF) AS MaxREADM_30_HF,
-- MIN(READM_30_HF) AS MinREADM_30_HF,
-- MAX(READM_30_HF)-MIN(READM_30_HF) AS RangeREADM_30_HF,
-- MAX(READM_30_HIP_KNEE) AS MaxREADM_30_HIP_KNEE,
-- MIN(READM_30_HIP_KNEE) AS MinREADM_30_HIP_KNEE,
-- MAX(READM_30_HIP_KNEE)-MIN(READM_30_HIP_KNEE) AS RangeREADM_30_HIP_KNEE,
-- MAX(READM_30_HOSP_WIDE) AS MaxREADM_30_HOSP_WIDE,
-- MIN(READM_30_HOSP_WIDE) AS MinREADM_30_HOSP_WIDE,
-- MAX(READM_30_HOSP_WIDE)-MIN(READM_30_HOSP_WIDE) AS RangeREADM_30_HOSP_WIDE,
-- MAX(READM_30_PN) AS MaxREADM_30_PN,
-- MIN(READM_30_PN) AS MinREADM_30_PN,
-- MAX(READM_30_PN)-MIN(READM_30_PN) AS RangeREADM_30_PN,
-- MAX(READM_30_STK) AS MaxREADM_30_STK,
-- MIN(READM_30_STK) AS MinREADM_30_STK,
-- MAX(READM_30_STK)-MIN(READM_30_STK) AS RangeREADM_30_STK
-- FROM best_state;

-- -- select * from min_max_state limit 5;


-- DROP TABLE norm_state;
-- CREATE TABLE norm_state
-- ROW FORMAT DELIMITED 
-- AS SELECT 
-- STATE,
-- (best.MORT_30_AMI - mm.MinMORT_30_AMI)/mm.RangeMORT_30_AMI AS NormMORT_30_AMI,
-- (best.MORT_30_CABG - mm.MinMORT_30_CABG)/mm.RangeMORT_30_CABG AS NormMORT_30_CABG,
-- (best.MORT_30_COPD - mm.MinMORT_30_COPD)/mm.RangeMORT_30_COPD AS NormMORT_30_COPD,
-- (best.MORT_30_HF - mm.MinMORT_30_HF)/mm.RangeMORT_30_HF AS NormMORT_30_HF,
-- (best.MORT_30_PN - mm.MinMORT_30_PN)/mm.RangeMORT_30_PN AS NormMORT_30_PN,
-- (best.MORT_30_STK - mm.MinMORT_30_STK)/mm.RangeMORT_30_STK AS NormMORT_30_STK,
-- (best.READM_30_AMI - mm.MinREADM_30_AMI)/mm.RangeREADM_30_AMI AS NormREADM_30_AMI,
-- (best.READM_30_CABG - mm.MinREADM_30_CABG)/mm.RangeREADM_30_CABG AS NormREADM_30_CABG,
-- (best.READM_30_COPD - mm.MinREADM_30_COPD)/mm.RangeREADM_30_COPD AS NormREADM_30_COPD,
-- (best.READM_30_HF - mm.MinREADM_30_HF)/mm.RangeREADM_30_HF AS NormREADM_30_HF,
-- (best.READM_30_HIP_KNEE - mm.MinREADM_30_HIP_KNEE)/mm.RangeREADM_30_HIP_KNEE AS NormREADM_30_HIP_KNEE,
-- (best.READM_30_HOSP_WIDE - mm.MinREADM_30_HOSP_WIDE)/mm.RangeREADM_30_HOSP_WIDE AS NormREADM_30_HOSP_WIDE,
-- (best.READM_30_PN - mm.MinREADM_30_PN)/mm.RangeREADM_30_PN AS NormREADM_30_PN,
-- (best.READM_30_STK - mm.MinREADM_30_STK)/mm.RangeREADM_30_STK AS NormREADM_30_STK
-- FROM best_state best, min_max_state mm
-- WHERE best.ones = mm.ones;

-- -- select * from norm_state limit 5;

-- DROP TABLE counts_state;
-- CREATE TABLE counts_state
-- ROW FORMAT DELIMITED 
-- AS SELECT 
-- STATE,
-- (SUM(NVL(NormED_1b,0)+NVL(NormED_2b,0)+NVL(NormEDV,0)+NVL(NormIMM_2,0)+NVL(NormIMM_3_OP_27_FAC_ADHPCT,0)+NVL(NormOP_1,0)+NVL(NormOP_18b,0)+NVL(NormOP_2,0)+NVL(NormOP_20,0)+NVL(NormOP_21,0)+NVL(NormOP_22,0)+NVL(NormOP_23,0)+NVL(NormOP_29,0)+NVL(NormOP_30,0)+NVL(NormOP_31,0)+NVL(NormOP_3b,0)+NVL(NormOP_4,0)+NVL(NormOP_5,0)+NVL(NormPC_01,0)+NVL(NormSTK_4,0)+NVL(NormVTE_5,0)+NVL(NormVTE_6,0))) AS S,
-- SUM(
-- (CASE WHEN NormMORT_30_AMI is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormMORT_30_CABG is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormMORT_30_COPD is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormMORT_30_HF is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormMORT_30_PN is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormMORT_30_STK is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormREADM_30_AMI is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormREADM_30_CABG is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormREADM_30_COPD is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormREADM_30_HF is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormREADM_30_HIP_KNEE is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormREADM_30_HOSP_WIDE is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormREADM_30_PN is null THEN 0 ELSE 1 END)+
-- (CASE WHEN NormREADM_30_STK is null THEN 0 ELSE 1 END)) AS T
-- from norm_state
-- GROUP BY STATE;

-- -- select * from counts_state limit 5;


-- DROP TABLE best_state;
-- CREATE TABLE best_state
-- ROW FORMAT DELIMITED 
-- AS SELECT 
-- STATE,
-- S/T AS SCORE
-- from counts_state 
-- WHERE T > 5
-- SORT BY SCORE DESC;

-- select * from best_state limit 10;











